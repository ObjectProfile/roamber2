Smalltalk current createPackage: 'AATrachel'!
Object subclass: #ATRCanvas
	instanceVariableNames: 'shapes svgCanvas'
	package: 'AATrachel'!

!ATRCanvas methodsFor: 'not yet classified'!

add: aShape
	shapes add: aShape.
	aShape addedIn: self
!

initialize
	svgCanvas := self paper.
	shapes := OrderedCollection new.
!

open
	shapes do: [ :s | s drawOn: svgCanvas ]
!

paper
	< var paper = Raphael("roassal-canvas", 1600 , 900); return paper;>
!

svgCanvas
	^ svgCanvas
! !

Object subclass: #ATRExamples
	instanceVariableNames: ''
	package: 'AATrachel'!

!ATRExamples methodsFor: 'not yet classified'!

example1
	"
	ATRExamples new example1
	"
	| c box1 box2 line circle |
	c := ATRCanvas new.
	box1 := ATRBoxShape new.
	box1 from: 10 @ 10 to: 200 @ 50.
	box1 color: Color red.
	
	box2 := ATRBoxShape new.
	box2 from: 55 @ 60 to: 80 @ 75.
	box2 color: Color green.
	
	circle := ATREllipseShape new.
	circle from: 155 @ 160 to: 180 @ 175.
	circle color: Color blue.

	line := ATRLineShape new.
	line from: 10 @ 10 to: 55 @ 80.

	c add: box1; add: box2; add: line; add: circle.
	c open
! !

Object subclass: #ATRShape
	instanceVariableNames: 'canvas color svgElement borderColor announcer'
	package: 'AATrachel'!

!ATRShape methodsFor: 'not yet classified'!

addedIn: aCanvas
	"Trachel Canvas as argument"
	canvas := aCanvas
!

borderColor
	^ borderColor
!

borderColor: aColor
	borderColor := aColor
!

color
	^ color
!

color: aColor
	color := aColor
!

drawOn: svgCanvas
!

initialize
	color := Color gray
! !

ATRShape subclass: #ATRBoundedShape
	instanceVariableNames: 'from to'
	package: 'AATrachel'!

!ATRBoundedShape methodsFor: 'not yet classified'!

from: aPoint
	from := aPoint
!

from: p1 to: p2
	self from: p1.
	self to: p2.
!

height
	^ (to - from) y
!

to: aPoint
	to := aPoint
!

width
	^ (to - from) x
! !

ATRBoundedShape subclass: #ATRBoxShape
	instanceVariableNames: ''
	package: 'AATrachel'!

!ATRBoxShape methodsFor: 'not yet classified'!

drawOn: svgCanvas
	svgElement := svgCanvas  rect: from x y: from y width: self width height: self height.
	svgElement attr:'fill' with: color asHTMLRGBA.
! !

ATRBoundedShape subclass: #ATREllipseShape
	instanceVariableNames: 'from to'
	package: 'AATrachel'!

!ATREllipseShape methodsFor: 'not yet classified'!

drawOn: svgCanvas
	svgElement := svgCanvas  ellipse: from x y: from y width: self width height: self height.
	svgElement attr:'fill' with: color asHTMLRGBA.
! !

ATRShape subclass: #ATRCircleShape
	instanceVariableNames: ''
	package: 'AATrachel'!

ATRShape subclass: #ATRLineShape
	instanceVariableNames: 'from to'
	package: 'AATrachel'!

!ATRLineShape methodsFor: 'not yet classified'!

drawOn: svgCanvas
	svgElement := svgCanvas  path: 'M', from x, ',', from y, 'L', to x, ',', to y.
	svgElement attr:'fill' with: color asHTMLRGBA.
!

from
	^ from
!

from: aPoint
	from := aPoint
!

from: aPoint to: anotherPoint
	self from: aPoint.
	self to: anotherPoint.
!

from: aPoint to: anotherPoint color: aColor
	self from: aPoint to: anotherPoint.
	self color: aColor
!

to
	^ to
!

to: aPoint
	to := aPoint
! !

